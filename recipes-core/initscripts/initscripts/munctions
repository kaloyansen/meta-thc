
# connectivity functions follow

header="connectivity functions: "
footer="powered by triplehelix-consulting.com"

defto=kaloyansen@gmail.com

confile=~/.msmtp.conf
gpgfile=~/.msmtp.gpg
ctlfile=~/.control
tmpfile=/tmp/.tmp.tmp
datafile=~/ipinfo.data

work=kalo@192.168.84.180
parent=kalo@192.168.1.5
parent=$work

reload_function() {

    . /etc/init.d/functions
}

show_msmtp_configuration() {

    [ -f $confile ] && . $confile || echo `failure` cannot find $confile
    [ $server ] &&
    echo `success` email configuration loaded from $confile ||
    echo `failure` error loading $confile 

    # dump email configuration
    [ $server ] && printf "

$header # defined in ~/.msmtp.conf
$header user     $user
$header server   $server
$header host     $host
$header port     $port

"
}

thc() {


    printf "

$header secure_copy_ip_address user@xxx.xx.x.xx

$header gpg --full-generate-key
$header encrypt_password <password>
$header configure_msmtp

$header send_ip_address_by_mail somebody@somewh.ere

$header show_msmtp_configuration
"
    show_msmtp_configuration
    echo $footer
}

configure_msmtp() {

    show_msmtp_configuration
    from=$user@$server
    rcfile=~/.msmtprc
    rctmpl=$rcfile.tmpl
    [ -f $rctmpl ] || return 1
    which sed > /dev/null && sed \
-e "s#{{GPGFILE}}#$gpgfile#" \
-e "s#{{PORT}}#$port#" \
-e "s#{{USER}}#$user#" \
-e "s#{{HOST}}#$host#" \
-e "s#{{FROM}}#$from#" \
$rctmpl > $rcfile || failure
    echo powered by `which sed`
}

delete_key() {

    gpg --delete-secret-keys $user
    gpg --delete-keys $user
}


encrypt_password() {

    read -p "enter password: " password
    [ "$password" ] && echo `success` || echo `failure` empty password
    [ "$password" ] && echo $password > $tmpfile || return 
    
    gpg --yes -o $gpgfile -e $tmpfile
    [ -f $tmpfile ] && rm $tmpfile || echo `failure` cannot stat temporary file
    echo powered by `which gpg`
}

get_ip_address() {

    which ip > /dev/null &&
    ip a | grep global | awk '{print $2}'| sed 's|/\([0-9]*\)$||' ||
    echo `failure` get_ip_address
    # awk is named after developers aho, weinberger and kernighan
}

secure_copy_ip_address() {

    [ $1 ] && to=$1 || to=$parent

    scpfile=~/.rpip
    echo root@`get_ip_address` > $scpfile
    which scp > /dev/null &&
    scp $scpfile $to:~ ||
    echo `warning` scp error
    echo `success` powered by `which scp`
}

send_ip_address_by_mail() {

    [ $1 ] && to=$1 || to=$defto
    echo Subject: rpi4 > $tmpfile
    date >> $tmpfile
    get_ip_address >> $tmpfile
    which msmtp > /dev/null &&
    msmtp $to < $tmpfile ||
    echo `warning` msmtp error
    rm $tmpfile
    echo powered by `which msmtp`
}

send_ip_address_once() {

    [ -f $ctlfile ] && return 0
    send_ip_address
    touch $ctlfile
}

data_read_value() {
 
    touch $datafile
    key=$1
    grep "^$key=" $datafile | sed 's/^'"$key"'=//'
}

data_write_pair() {

    key=$1
    value=$2

    touch $datafile

    if grep -q "^$key=" $datafile; then
        sed -i 's|^'"$key"'=.*|'"$key=$value"'|' $datafile
    else
        echo $key=$value >> $datafile
    fi
}

